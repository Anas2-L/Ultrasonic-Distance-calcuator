//DISTANCE ALARM USING ARDUINO

// defines pins numbers

#define buzzer 11

#define red 13

#define blue 12

#define green 8

const int trigPin = 9;

const int echoPin = 10;

// defines variables

long duration;

int distance;

void setup() 

{

 pinMode(trigPin, OUTPUT); // Sets the trigPin as an Output

 pinMode(echoPin, INPUT); // Sets the echoPin as an Input

 pinMode(red, OUTPUT);

 pinMode(blue, OUTPUT);

 pinMode(green, OUTPUT);

 pinMode(buzzer, OUTPUT);

 Serial.begin(9600); // Starts the serial communication

}

void loop() 

{

 // Clears the trigPin

 digitalWrite(trigPin, LOW);

 delayMicroseconds(2);

 // Sets the trigPin on HIGH state for 10 micro seconds

 digitalWrite(trigPin, HIGH);

 delayMicroseconds(10);

 digitalWrite(trigPin, LOW);

 // Reads the echoPin, returns the sound wave travel time in microseconds

 duration = pulseIn(echoPin, HIGH);

 // Calculating the distance

 distance= duration*0.034/2;

 //print the distance in Serial mode display

 Serial.print("Distance: ");

 Serial.println(distance);

 //delay(1000);

 if (distance<=15)

 {

  digitalWrite(buzzer,LOW);

  digitalWrite(blue,HIGH);

  delay(50);

  digitalWrite(blue,LOW);

  digitalWrite(green,HIGH);

  delay(50);

  digitalWrite(green,LOW);

  digitalWrite(red,HIGH);

  digitalWrite(buzzer,HIGH);

  delay(50);

  digitalWrite(buzzer,LOW);

 }

 else if (distance<=50&&distance>15)

 {

  digitalWrite(buzzer,LOW);

  digitalWrite(red,LOW);

  digitalWrite(blue,LOW);

  digitalWrite(green,HIGH);

  digitalWrite(buzzer,HIGH);

  delay(500);

  digitalWrite(buzzer,LOW);

 }

 else 

 {

  digitalWrite(buzzer,LOW);

  digitalWrite(red,LOW);

  digitalWrite(green,LOW);

  digitalWrite(blue,HIGH);

 }

}
